{"version":3,"file":"static/js/597.15040761.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,0FAChB,qBADgB,SAERC,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OADR,qBACQ,oBAA0CD,IAFlC,cAEzBI,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,gFACvBC,EADuB,gBACLD,GADK,SAENL,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBQ,EAAxB,oBAA0CT,IAFpC,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfK,EAAe,mCAAG,WAAMF,GAAN,gFACvBC,EADuB,gBACLD,EADK,qBAENL,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBQ,EAAxB,oBAA0CT,IAFpC,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfM,EAAe,mCAAG,WAAMH,GAAN,gFACvBC,EADuB,gBACLD,EADK,qBAENL,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBQ,EAAxB,oBAA0CT,IAFpC,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfO,EAAc,mCAAG,WAAMC,GAAN,qGAELV,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OAFK,eAEL,oBACWD,EADX,kBAC4Ba,IAHvB,cAEtBT,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,2CAAH,qD,yGCiB3B,UAzCa,WACX,IAAQE,GAAOM,EAAAA,EAAAA,MAAPN,GACR,GAAoCO,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,WAAMX,GAAN,iGAEAE,EAAAA,EAAAA,IAAgBF,GAFhB,OAEhBY,EAFgB,OAGtBH,EAAcG,EAAQC,MAHA,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,sDAQvBJ,EAAkBX,EACnB,GAAE,CAACA,IAEJ,IAAMgB,EAAWR,EAAWS,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcpB,EAAlC,EAAkCA,GAAlC,OAC9B,2BACE,gBAAKqB,IAAG,0CAAqCD,GAAgBE,IAAKJ,KAClE,uBAAIA,KACJ,uCAAeC,OAHRnB,EADqB,IAOhC,OACE,8BACE,0BACE,wBAAKgB,OAIZ,C","sources":["api-service/api-service.js","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '50f1c38da446101780a79b9df9405e4f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const params = 'trending/movie/day';\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const params = `movie/${id}`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieCredits = async id => {\n  const params = `movie/${id}/credits`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieReviews = async id => {\n  const params = `movie/${id}/reviews`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getSearchMovie = async query => {\n  const params = `search/movie`;\n  const responce = await axios.get(\n    `${BASE_URL}${params}?api_key=${API_KEY}&query=${query}`\n  );\n  return responce.data.results;\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'api-service/api-service';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [movieCasts, setMovieCasts] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCredits = async id => {\n      try {\n        const credits = await getMovieCredits(id);\n        setMovieCasts(credits.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovieCredits(id);\n  }, [id]);\n\n  const castItem = movieCasts.map(({ name, character, profile_path, id }) => (\n    <li key={id}>\n      <img src={`https://image.tmdb.org/t/p/w200/${profile_path}`} alt={name} />\n      <p>{name}</p>\n      <p>Character: {character}</p>\n    </li>\n  ));\n  return (\n    <section>\n      <div>\n        <ul>{castItem}</ul>\n      </div>\n    </section>\n  );\n};\n\nCast.propTypes = {\n  castItem: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    profile_path: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Cast;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","responce","data","results","getMovieDetails","id","params","getMovieCredits","getMovieReviews","getSearchMovie","query","useParams","useState","movieCasts","setMovieCasts","useEffect","fetchMovieCredits","credits","cast","console","log","castItem","map","name","character","profile_path","src","alt"],"sourceRoot":""}