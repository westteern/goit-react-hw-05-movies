{"version":3,"file":"static/js/157.7c4fbc73.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,0FAChB,qBADgB,SAERC,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OADR,qBACQ,oBAA0CD,IAFlC,cAEzBI,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,gFACvBC,EADuB,gBACLD,GADK,SAENL,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBQ,EAAxB,oBAA0CT,IAFpC,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfK,EAAe,mCAAG,WAAMF,GAAN,gFACvBC,EADuB,gBACLD,EADK,qBAENL,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBQ,EAAxB,oBAA0CT,IAFpC,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfM,EAAe,mCAAG,WAAMH,GAAN,gFACvBC,EADuB,gBACLD,EADK,qBAENL,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBQ,EAAxB,oBAA0CT,IAFpC,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfO,EAAc,mCAAG,WAAMC,GAAN,qGAELV,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OAFK,eAEL,oBACWD,EADX,kBAC4Ba,IAHvB,cAEtBT,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,2CAAH,qD,iLC3BdQ,EAAUC,EAAAA,GAAAA,IAAH,2HAOPC,EAAMD,EAAAA,GAAAA,IAAH,kFAMHE,EAAWF,EAAAA,GAAAA,IAAH,0DAIRG,EAAYH,EAAAA,GAAAA,OAAH,ypB,kBCoDtB,EAlEkB,SAAC,GASZ,IARLI,EAQI,EARJA,OACAC,EAOI,EAPJA,OACAC,EAMI,EANJA,MACAC,EAKI,EALJA,KACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,KACAC,EACI,EADJA,KAEA,OACE,6BACE,UAACR,EAAD,CAAWS,KAAK,SAASC,QAAST,EAAlC,WACE,SAAC,MAAD,CACEU,MAAO,CACLC,MAAO,KACPC,OAAQ,KACRC,cAAe,YALrB,cAUA,UAAClB,EAAD,YACE,SAACE,EAAD,CAAKiB,IAAKb,EAAQc,IAAKb,KACvB,4BACE,0BACGA,EADH,IACWK,EADX,QAGA,wCAAgBJ,EAAhB,SACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,WAGR,UAACP,EAAD,YACE,kDACA,2BACE,yBACE,SAAC,KAAD,CAAMkB,MAAO,CAAEV,KAAAA,GAAQW,GAAG,OAA1B,qBAIF,yBACE,SAAC,KAAD,CAAMD,MAAO,CAAEV,KAAAA,GAAQW,GAAG,UAA1B,8BAMN,SAAC,KAAD,MAGL,ECSD,EA7DqB,WAAO,IAAD,EACjB5B,GAAO6B,EAAAA,EAAAA,MAAP7B,GACF8B,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXhB,GAAO,UAAAa,EAASH,aAAT,eAAgBV,OAAQ,IACrC,GAAwCiB,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,WAAMxC,GAAN,uFAEtBsC,GAAa,GAFS,UAGEvC,EAAAA,EAAAA,IAAgBC,GAHlB,OAGhByC,EAHgB,OAItBL,EAAgBK,GAJM,gDAMtBC,QAAQC,IAAR,MANsB,yBAQtBL,GAAa,GARS,4EAAH,sDAWvBE,EAAkBxC,EACnB,GAAE,CAACA,IAEJ,IACE4C,EAMET,EANFS,eACA5B,EAKEmB,EALFnB,OACAD,EAIEoB,EAJFpB,SACA8B,EAGEV,EAHFU,YACAC,EAEEX,EAFFW,aACAC,EACEZ,EADFY,aAGIC,EAAkBhC,EACpBA,EAAOiC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACrC,KACAxC,EAAUiC,EAAD,0CAE0BA,GADnC,4DAEE/B,GAAwB,IAAfgC,EAAsB,IAAIO,UACnCC,EAAcP,EAAeA,EAAaQ,MAAM,EAAG,GAAK,KAG9D,OACE,gCACGlB,IAAa,SAACmB,EAAA,EAAD,KACZnB,IACA,SAAC,EAAD,CACExB,MAAO+B,EACP1B,KAAMoC,EACN1C,OAAQA,EACRE,KAAMA,EACNC,SAAUA,EACVC,OAAQgC,EACRrC,OAbO,kBAAMqB,EAASf,EAAf,EAcPA,KAAMA,MAKf,C","sources":["api-service/api-service.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '50f1c38da446101780a79b9df9405e4f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const params = 'trending/movie/day';\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const params = `movie/${id}`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieCredits = async id => {\n  const params = `movie/${id}/credits`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieReviews = async id => {\n  const params = `movie/${id}/reviews`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getSearchMovie = async query => {\n  const params = `search/movie`;\n  const responce = await axios.get(\n    `${BASE_URL}${params}?api_key=${API_KEY}&query=${query}`\n  );\n  return responce.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid grey;\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n  height: 300px;\n  margin-right: 20px;\n`;\n\nexport const InfoList = styled.div`\n  border-bottom: 2px solid grey;\n`;\n\nexport const GoBackBtn = styled.button`\n  margin-right: auto;\n  padding: 0;\n  border-radius: 2px;\n  background-color: #ff9999;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 12px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 200px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &: focus {\n    background-color: #303f9f;\n  }\n`;\n","import { Link, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Img, Wrapper, InfoList, GoBackBtn } from './MovieCard.styled';\nimport { BiLeftArrowAlt } from 'react-icons/bi';\n\nconst MovieCard = ({\n  goBack,\n  poster,\n  title,\n  vote,\n  overview,\n  genres,\n  from,\n  year,\n}) => {\n  return (\n    <main>\n      <GoBackBtn type=\"button\" onClick={goBack}>\n        <BiLeftArrowAlt\n          style={{\n            width: '15',\n            height: '15',\n            verticalAlign: 'middle',\n          }}\n        />\n        Go back\n      </GoBackBtn>\n      <Wrapper>\n        <Img src={poster} alt={title} />\n        <div>\n          <h2>\n            {title}({year})\n          </h2>\n          <p>User Score: {vote} %</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n        </div>\n      </Wrapper>\n      <InfoList>\n        <p>Aditional information</p>\n        <ul>\n          <li>\n            <Link state={{ from }} to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link state={{ from }} to=\"reviews\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </InfoList>\n      <Outlet />\n    </main>\n  );\n};\n\nMovieCard.propTypes = {\n  title: PropTypes.string,\n  poster: PropTypes.string.isRequired,\n  vote: PropTypes.string,\n  overview: PropTypes.string,\n  genres: PropTypes.string,\n  goBack: PropTypes.func.isRequired,\n  year: PropTypes.string,\n  from: PropTypes.object,\n};\n\nexport default MovieCard;\n","import { getMovieDetails } from 'api-service/api-service';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Loader from 'components/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const from = location.state?.from || '/';\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async id => {\n      try {\n        setIsLoading(true);\n        const movieData = await getMovieDetails(id);\n        setMovieDetails(movieData);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails(id);\n  }, [id]);\n\n  const {\n    original_title,\n    genres,\n    overview,\n    poster_path,\n    vote_average,\n    release_date,\n  } = movieDetails;\n\n  const genreFormatting = genres\n    ? genres.map(genre => genre.name).join(', ')\n    : null;\n  let poster = !poster_path\n    ? 'https://via.placeholder.com/300x450?text=Poster+Not+Found'\n    : `https://image.tmdb.org/t/p/w300/${poster_path}`;\n  const vote = ((vote_average * 100) / 10).toFixed();\n  const releaseDate = release_date ? release_date.slice(0, 4) : null;\n  const goBack = () => navigate(from);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <MovieCard\n          title={original_title}\n          year={releaseDate}\n          poster={poster}\n          vote={vote}\n          overview={overview}\n          genres={genreFormatting}\n          goBack={goBack}\n          from={from}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","responce","data","results","getMovieDetails","id","params","getMovieCredits","getMovieReviews","getSearchMovie","query","Wrapper","styled","Img","InfoList","GoBackBtn","goBack","poster","title","vote","overview","genres","from","year","type","onClick","style","width","height","verticalAlign","src","alt","state","to","useParams","location","useLocation","navigate","useNavigate","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","useEffect","fetchMovieDetails","movieData","console","log","original_title","poster_path","vote_average","release_date","genreFormatting","map","genre","name","join","toFixed","releaseDate","slice","Loader"],"sourceRoot":""}