{"version":3,"file":"static/js/157.08db69c8.chunk.js","mappings":"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","sources":["api-service/api-service.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '50f1c38da446101780a79b9df9405e4f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const params = 'trending/movie/day';\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const params = `movie/${id}`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieCredits = async id => {\n  const params = `movie/${id}/credits`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieReviews = async id => {\n  const params = `movie/${id}/reviews`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getSearchMovie = async query => {\n  const params = `search/movie`;\n  const responce = await axios.get(\n    `${BASE_URL}${params}?api_key=${API_KEY}&query=${query}`\n  );\n  return responce.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid grey;\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n  height: 300px;\n  margin-right: 10px;\n`;\n\nexport const InfoList = styled.div`\n  border-bottom: 2px solid grey;\n`;\n","import { Link, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Img, Wrapper, InfoList } from './MovieCard.styled';\n\nconst MovieCard = ({\n  goBack,\n  poster,\n  title,\n  vote,\n  overview,\n  genres,\n  from,\n  year,\n}) => {\n  return (\n    <main>\n      <button onClick={goBack}>Go back</button>\n      <Wrapper>\n        <Img src={poster} alt={title} />\n        <div>\n          <h2>\n            {title}({year})\n          </h2>\n          <p>User Score: {vote} %</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n        </div>\n      </Wrapper>\n      <InfoList>\n        <p>Aditional information</p>\n        <ul>\n          <li>\n            <Link state={{ from }} to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link state={{ from }} to=\"reviews\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </InfoList>\n      <Outlet />\n    </main>\n  );\n};\n\nMovieCard.propTypes = {\n  title: PropTypes.string,\n  poster: PropTypes.string.isRequired,\n  vote: PropTypes.string,\n  overview: PropTypes.string,\n  genres: PropTypes.string,\n  goBack: PropTypes.func.isRequired,\n  year: PropTypes.string,\n  from: PropTypes.object,\n};\n\nexport default MovieCard;\n","import { getMovieDetails } from 'api-service/api-service';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Loader from 'components/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const from = location.state?.from || '/';\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async id => {\n      try {\n        setIsLoading(true);\n        const movieData = await getMovieDetails(id);\n        setMovieDetails(movieData);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails(id);\n  }, [id]);\n\n  const {\n    original_title,\n    genres,\n    overview,\n    poster_path,\n    vote_average,\n    release_date,\n  } = movieDetails;\n\n  const genreFormatting = genres\n    ? genres.map(genre => genre.name).join(', ')\n    : null;\n  let poster = !poster_path\n    ? 'https://via.placeholder.com/300x450?text=Poster+Not+Found'\n    : `https://image.tmdb.org/t/p/w300/${poster_path}`;\n  const vote = ((vote_average * 100) / 10).toFixed();\n  const releaseDate = release_date ? release_date.slice(0, 4) : null;\n  const goBack = () => navigate(from);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <MovieCard\n          title={original_title}\n          year={releaseDate}\n          poster={poster}\n          vote={vote}\n          overview={overview}\n          genres={genreFormatting}\n          goBack={goBack}\n          from={from}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","responce","data","results","getMovieDetails","id","params","getMovieCredits","getMovieReviews","getSearchMovie","query","Wrapper","styled","Img","InfoList","goBack","poster","title","vote","overview","genres","from","year","onClick","src","alt","state","to","useParams","location","useLocation","navigate","useNavigate","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","useEffect","fetchMovieDetails","movieData","console","log","original_title","poster_path","vote_average","release_date","genreFormatting","map","genre","name","join","toFixed","releaseDate","slice","Loader"],"sourceRoot":""}