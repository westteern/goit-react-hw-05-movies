{"version":3,"file":"static/js/415.8a94fb4c.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,0FAChB,qBADgB,SAERC,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OADR,qBACQ,oBAA0CD,IAFlC,cAEzBI,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,gFACvBC,EADuB,gBACLD,GADK,SAENL,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBQ,EAAxB,oBAA0CT,IAFpC,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfK,EAAe,mCAAG,WAAMF,GAAN,gFACvBC,EADuB,gBACLD,EADK,qBAENL,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBQ,EAAxB,oBAA0CT,IAFpC,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfM,EAAe,mCAAG,WAAMH,GAAN,gFACvBC,EADuB,gBACLD,EADK,qBAENL,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBQ,EAAxB,oBAA0CT,IAFpC,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfO,EAAc,mCAAG,WAAMC,GAAN,qGAELV,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OAFK,eAEL,oBACWD,EADX,kBAC4Ba,IAHvB,cAEtBT,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,2CAAH,qD,oDC1BrBQ,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MACXC,EAAYH,EAAMI,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,MAAP,OAC1B,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMN,GAAYO,GAAE,kBAAaf,GAAhD,SACGY,KAFIZ,EADiB,IAO5B,OAAO,wBAAKU,GACb,EAEDJ,EAAWU,aAAe,CACxBT,MAAO,IAST,K,yGCCA,UAtBa,WACX,OAA4CU,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,8GAEH3B,EAAAA,EAAAA,MAFG,OAElB4B,EAFkB,OAGxBH,EAAkBG,GAHM,gDAKxBC,QAAQC,IAAR,MALwB,yDAAH,qDAQzBH,GACD,GAAE,KAGD,6BACE,4CACA,SAAC,IAAD,CAAYd,MAAOW,MAGxB,C","sources":["api-service/api-service.js","components/RenderList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '50f1c38da446101780a79b9df9405e4f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const params = 'trending/movie/day';\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const params = `movie/${id}`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieCredits = async id => {\n  const params = `movie/${id}/credits`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieReviews = async id => {\n  const params = `movie/${id}/reviews`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getSearchMovie = async query => {\n  const params = `search/movie`;\n  const responce = await axios.get(\n    `${BASE_URL}${params}?api_key=${API_KEY}&query=${query}`\n  );\n  return responce.data.results;\n};\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst RenderList = ({ films }) => {\n  const location = useLocation();\n  const listItems = films.map(({ id, title }) => (\n    <li key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        {title}\n      </Link>\n    </li>\n  ));\n  return <ul>{listItems}</ul>;\n};\n\nRenderList.defaultProps = {\n  films: [],\n};\nRenderList.propTypes = {\n  listItems: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }),\n};\n\nexport default RenderList;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'api-service/api-service';\nimport RenderList from 'components/RenderList';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const trends = await getTrendingMovies();\n        setTrendingMovies(trends);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <RenderList films={trendingMovies} />\n    </main>\n  );\n};\nexport default Home;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","responce","data","results","getMovieDetails","id","params","getMovieCredits","getMovieReviews","getSearchMovie","query","RenderList","films","location","useLocation","listItems","map","title","state","from","to","defaultProps","useState","trendingMovies","setTrendingMovies","useEffect","fetchTrendingMovies","trends","console","log"],"sourceRoot":""}