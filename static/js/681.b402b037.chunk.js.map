{"version":3,"file":"static/js/681.b402b037.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,0FAChB,qBADgB,SAERC,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OADR,qBACQ,oBAA0CD,IAFlC,cAEzBI,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,gFACvBC,EADuB,gBACLD,GADK,SAENL,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBQ,EAAxB,oBAA0CT,IAFpC,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfK,EAAe,mCAAG,WAAMF,GAAN,gFACvBC,EADuB,gBACLD,EADK,qBAENL,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBQ,EAAxB,oBAA0CT,IAFpC,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfM,EAAe,mCAAG,WAAMH,GAAN,gFACvBC,EADuB,gBACLD,EADK,qBAENL,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBQ,EAAxB,oBAA0CT,IAFpC,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfO,EAAc,mCAAG,WAAMC,GAAN,qGAELV,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OAFK,eAEL,oBACWD,EADX,kBAC4Ba,IAHvB,cAEtBT,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,2CAAH,qD,yGCqB3B,UA7CgB,WACd,IAAQE,GAAOM,EAAAA,EAAAA,MAAPN,GACR,GAAwCO,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,WAAMX,GAAN,iGAEAG,EAAAA,EAAAA,IAAgBH,GAFhB,OAEhBY,EAFgB,OAGtBH,EAAgBG,EAAQd,SAHF,gDAKtBe,QAAQC,IAAR,MALsB,yDAAH,sDAQvBH,EAAkBX,EACnB,GAAE,CAACA,IACJ,IAAMe,EAAcP,EAAaQ,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACnC,2BACE,qCAAaD,MACb,uBAAIC,MAFGlB,EAD0B,IAOrC,OACE,8BACE,0BACE,wBACGe,EAAYI,OACXJ,GAEA,yEAMX,C","sources":["api-service/api-service.js","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '50f1c38da446101780a79b9df9405e4f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const params = 'trending/movie/day';\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const params = `movie/${id}`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieCredits = async id => {\n  const params = `movie/${id}/credits`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieReviews = async id => {\n  const params = `movie/${id}/reviews`;\n  const responce = await axios.get(`${BASE_URL}${params}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getSearchMovie = async query => {\n  const params = `search/movie`;\n  const responce = await axios.get(\n    `${BASE_URL}${params}?api_key=${API_KEY}&query=${query}`\n  );\n  return responce.data.results;\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api-service/api-service';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async id => {\n      try {\n        const reviews = await getMovieReviews(id);\n        setMovieReviews(reviews.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovieReviews(id);\n  }, [id]);\n  const reviewsItem = movieReviews.map(({ id, author, content }) => (\n    <li key={id}>\n      <h3>Author: {author}</h3>\n      <p>{content}</p>\n    </li>\n  ));\n\n  return (\n    <section>\n      <div>\n        <ul>\n          {reviewsItem.length ? (\n            reviewsItem\n          ) : (\n            <p>We don't have any reviews for this movie</p>\n          )}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nReviews.propTypes = {\n  element: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Reviews;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","responce","data","results","getMovieDetails","id","params","getMovieCredits","getMovieReviews","getSearchMovie","query","useParams","useState","movieReviews","setMovieReviews","useEffect","fetchMovieReviews","reviews","console","log","reviewsItem","map","author","content","length"],"sourceRoot":""}